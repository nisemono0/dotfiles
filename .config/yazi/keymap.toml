[manager]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<Esc>", run = "escape",              desc = "Exit visual mode, clear selection, or cancel search" },
    { on = "<C-[>", run = "escape",              desc = "Exit visual mode, clear selection, or cancel search" },
    { on = "<C-c>", run = "escape",              desc = "Exit visual mode, clear selection, or cancel search" },
    { on = "<C-z>", run = "suspend",             desc = "Suspend the process" },
    { on = "q",     run = "close",               desc = "Quit the process (close tab if exists)" },
    { on = "Q",     run = "plugin confirm-quit", desc = "Quit the process (close all open tabs)" },
    { on = "<C-w>", run = "close",               desc = "Close the current tab, or quit if it's last" },
    { on = "<A-w>", run = "close",               desc = "Close the current tab, or quit if it's last" },

    # Hopping
    { on = "k", run = "arrow -1", desc = "Previous file" },
    { on = "j", run = "arrow +1", desc = "Next file" },

    { on = "<Up>",   run = "arrow -1", desc = "Previous file" },
    { on = "<Down>", run = "arrow +1", desc = "Next file" },

    { on = "K", run = "arrow -50%", desc = "Move cursor up half page" },
    { on = "J", run = "arrow +50%", desc = "Move cursor down half page" },

    { on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
    { on = "<S-PageDown>", run = "arrow +50%",  desc = "Move cursor down half page" },
    { on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
    { on = "<PageDown>",   run = "arrow +100%", desc = "Move cursor down one page" },

    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    # Navigation
    { on = "h", run = "leave",              desc = "Back to the parent directory" },
    { on = "l", run = "plugin smart-enter", desc = "Enter the child directory or open file" },

    { on = "[", run = "plugin move-parentdir prev", desc = "Enter previous parent directory" },
    { on = "]", run = "plugin move-parentdir next", desc = "Enter next parent directory" },

    { on = "<Left>",  run = "leave",              desc = "Back to the parent directory" },
    { on = "<Right>", run = "plugin smart-enter", desc = "Enter the child directory or open file" },

    { on = "H", run = "back",    desc = "Back to previous directory" },
    { on = "L", run = "forward", desc = "Forward to next directory" },

    # Toggle
    { on = "<Space>",    run = [ "toggle", "arrow +1" ], desc = "Toggle the current selection state" },
    { on = [ "v", "a" ], run = "toggle_all --state=on",  desc = "Select all files" },
    { on = [ "v", "r" ], run = "toggle_all",             desc = "Invert selection of all files" },
    { on = [ "v", "d" ], run = "toggle_all --state=off", desc = "Deselect all files (in directory)" },
    { on = [ "v", "u" ], run = "escape --select",        desc = "Deselect all files (all directories)"},

    # Visual mode
    { on = "V",          run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
    { on = "<C-v>",      run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
    { on = [ "u", "v" ], run = "escape --select",     desc = "Deselect all files (all directories)" },

    # Seeking
    { on = "<A-k>", run = "seek -5", desc = "Seek up 5 units in the preview" },
    { on = "<A-j>", run = "seek +5", desc = "Seek down 5 units in the preview" },

    # Spotting
    { on = "i",     run = "spot", desc = "Spot hovered file" },
    { on = "<Tab>", run = "spot", desc = "Spot hovered file" },

    # Operation
    { on = "o",           run = "open",                                               desc = "Open selected files" },
    { on = "O",           run = "open --interactive",                                 desc = "Open selected files interactively" },
    { on = "E",           run = """shell '${EDITOR:-vi} "$@"' --block""",             desc = "Run $EDITOR or vi on file(s)" },
    { on = "<Enter>",     run = "open",                                               desc = "Open selected files" },
    { on = "<S-Enter>",   run = "open --interactive",                                 desc = "Open selected files interactively" },
    { on = [ "y", "y" ],  run = "yank",                                               desc = "Yank selected files" },
    { on = [ "d", "d" ],  run = "yank --cut",                                         desc = "Cut selected files" },
    { on = [ "p", "p" ],  run = "paste",                                              desc = "Paste yanked/cut files" },
    { on = [ "p", "P" ],  run = "paste --force",                                      desc = "Paste yanked/cut files (overwrite if exists)" },
    { on = [ "p", "-" ],  run = "link",                                               desc = "Symlink the absolute path of yanked files" },
    { on = [ "p", "_" ],  run = "link --relative",                                    desc = "Symlink the relative path of yanked files" },
    { on = [ "u", "y" ],  run = "unyank",                                             desc = "Cancel the yank status" },
    { on = [ "u", "d" ],  run = "unyank",                                             desc = "Cancel the cut status" },
    { on = [ "d", "t" ],  run = "remove",                                             desc = "Trash selected files" },
    { on = [ "d", "D" ],  run = "remove --permanently",                               desc = "Permanently delete selected files" },
    { on = "t",           run = "create",                                             desc = "Create a file (ends with / for directories)" },
    { on = "a",           run = "rename --cursor=before_ext",                         desc = "Rename selected file(s) (cursor before extension)" },
    { on = "A",           run = "rename --cursor=end",                                desc = "Rename selected file(s) (cursor at end)" },
    { on = "I",           run = "rename --cursor=start",                              desc = "Rename selected file(s) (cursor at start)" },
    { on = [ "c", "w" ],  run = "rename --empty=all",                                 desc = "Rename selected file(s) (clear input)" },
    { on = [ "r", "r" ],  run = "rename --empty=all",                                 desc = "Rename selected file(s) (clear input)" },
    { on = [ "r", "a" ],  run = "rename --cursor=before_ext",                         desc = "Rename selected file(s) (cursor before extension)" },
    { on = [ "r", "A" ],  run = "rename --cursor=end",                                desc = "Rename selected file(s) (cursor at end)" },
    { on = [ "r", "I" ],  run = "rename --cursor=start",                              desc = "Rename selected file(s) (cursor at start)" },
    { on = [ "r", "s" ],  run = "rename --empty=stem --cursor=start",                 desc = "Rename selected file(s) (remove stem, cursor at start)" },
    { on = [ "r", "e" ],  run = "rename --empty=ext --cursor=end",                    desc = "Rename selected file(s) (remove extension, cursor at end)" },
    { on = ":",           run = "shell --interactive",                                desc = "Run a shell command" },
    { on = "@",           run = """shell ' "$@"' --interactive --cursor=0""",         desc = "Run a shell command" },
    { on = ";",           run = "shell --block --interactive",                        desc = "Run a shell command (block until finishes)" },
    { on = "<A-@>",       run = """shell ' "$@"' --block --interactive --cursor=0""", desc = "Run a shell command (block until finishes)" },
    { on = ".",           run = "hidden toggle",                                      desc = "Toggle the visibility of hidden files" },
    { on = "<Backspace>", run = "hidden toggle",                                      desc = "Toggle the visibility of hidden files" },
    { on = [ "s", "f" ],  run = "search --via=fd",                                    desc = "Search files by name via fd" },
    { on = [ "s", "r" ],  run = "search --via=rg",                                    desc = "Search files by content via ripgrep" },
    { on = "<C-s>", run = "escape --find --filter --search",                          desc = "Cancel the ongoing search" },
    { on = "<C-f>", run = "plugin fzf",                                               desc = "Jump to a file/directory via fzf" },

    # Linemode
    { on = [ "M", "s" ], run = "linemode size",        desc = "Linemode: size" },
    { on = [ "M", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
    { on = [ "M", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
    { on = [ "M", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
    { on = [ "M", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
    { on = [ "M", "n" ], run = "linemode none",        desc = "Linemode: none" },

    # Copy
    { on = [ "y", "p" ], run = "copy path",             desc = "Copy the absolute path" },
    { on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
    { on = [ "y", "n" ], run = "copy filename",         desc = "Copy the filename" },
    { on = [ "y", "." ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

    # Filter
    { on = "f", run = "filter --smart", desc = "Filter files" },

    # Find
    { on = "/", run = "find --smart",            desc = "Find next file" },
    { on = "?", run = "find --previous --smart", desc = "Find previous file" },
    { on = "n", run = "find_arrow",              desc = "Next found" },
    { on = "N", run = "find_arrow --previous",   desc = "Previous found" },

    # Sorting
    { on = [ ",", "M" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time (old -> new)" },
    { on = [ ",", "m" ], run = [ "sort mtime --reverse",    "linemode mtime" ], desc = "Sort by modified time (new -> old)" },
    { on = [ ",", "B" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time (old -> new)" },
    { on = [ ",", "b" ], run = [ "sort btime --reverse",    "linemode btime" ], desc = "Sort by birth time (new -> old)" },
    { on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
    { on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
    { on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
    { on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
    { on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
    { on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
    { on = [ ",", "S" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size (small -> big)" },
    { on = [ ",", "s" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (big -> small)" },
    { on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

    # Goto
    { on = [ "g", "/" ], run = "cd /",                     desc = "Go root" },
    { on = [ "g", "m" ], run = "cd /run/media",            desc = "Go /run/media" },
    { on = [ "g", "h" ], run = "cd ~",                     desc = "Go home" },
    { on = [ "g", "c" ], run = "cd ~/.config",             desc = "Go ~/.config" },
    { on = [ "g", "f" ], run = "follow",                   desc = "Follow hovered symlink" },
    { on = [ "g", "t" ], run = "tab_switch +1 --relative", desc = "Switch to next tab" },
    { on = [ "g", "t" ], run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
    { on = [ "c", "d" ], run = "cd --interactive",         desc = "Jump interactively" },

    # Tabs
    { on = "<C-t>", run = "tab_create --current", desc = "Create a new tab with CWD" },

    { on = "1",     run = "tab_switch 0", desc = "Switch to first tab" },
    { on = "<C-1>", run = "tab_switch 0", desc = "Switch to first tab" },
    { on = "<A-1>", run = "tab_switch 0", desc = "Switch to first tab" },
    { on = "2",     run = "tab_switch 1", desc = "Switch to second tab" },
    { on = "<C-2>", run = "tab_switch 1", desc = "Switch to second tab" },
    { on = "<A-2>", run = "tab_switch 1", desc = "Switch to second tab" },
    { on = "3",     run = "tab_switch 2", desc = "Switch to third tab" },
    { on = "<C-3>", run = "tab_switch 2", desc = "Switch to third tab" },
    { on = "<A-3>", run = "tab_switch 2", desc = "Switch to third tab" },
    { on = "4",     run = "tab_switch 3", desc = "Switch to fourth tab" },
    { on = "<C-4>", run = "tab_switch 3", desc = "Switch to fourth tab" },
    { on = "<A-4>", run = "tab_switch 3", desc = "Switch to fourth tab" },
    { on = "5",     run = "tab_switch 4", desc = "Switch to fifth tab" },
    { on = "<C-5>", run = "tab_switch 4", desc = "Switch to fifth tab" },
    { on = "<A-5>", run = "tab_switch 4", desc = "Switch to fifth tab" },
    { on = "6",     run = "tab_switch 5", desc = "Switch to sixth tab" },
    { on = "<C-6>", run = "tab_switch 5", desc = "Switch to sixth tab" },
    { on = "<A-6>", run = "tab_switch 5", desc = "Switch to sixth tab" },
    { on = "7",     run = "tab_switch 6", desc = "Switch to seventh tab" },
    { on = "<C-7>", run = "tab_switch 6", desc = "Switch to seventh tab" },
    { on = "<A-7>", run = "tab_switch 6", desc = "Switch to seventh tab" },
    { on = "8",     run = "tab_switch 7", desc = "Switch to eighth tab" },
    { on = "<C-8>", run = "tab_switch 7", desc = "Switch to eighth tab" },
    { on = "<A-8>", run = "tab_switch 7", desc = "Switch to eighth tab" },
    { on = "9",     run = "tab_switch 8", desc = "Switch to ninth tab" },
    { on = "<C-9>", run = "tab_switch 8", desc = "Switch to ninth tab" },
    { on = "<A-9>", run = "tab_switch 8", desc = "Switch to ninth tab" },

    { on = "<BackTab>", run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
    { on = "<Tab>",     run = "tab_switch +1 --relative", desc = "Switch to next tab" },

    { on = "<C-BackTab>", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
    { on = "<C-Tab>",     run = "tab_swap +1", desc = "Swap current tab with next tab" },

    # Tasks
    { on = "w", run = "tasks:show", desc = "Show task manager" },

    ## Plugins
    # chmod
    { on = [ "c", "m" ], run = "plugin chmod", desc = "Chmod on selected file(s)" },

    # Filesize plugin
    { on = [ "d", "u" ], run = "plugin what-size", desc = "Show size of selection or cwd" },

    # Yank file contents
    { on = [ "y", "c" ], run = "plugin copy-file-contents", desc = "Copy contents of file" },

    # Open with prompt command
    { on = "<A-o>", run = "plugin open-with-cmd", desc = "Open with command in the terminal" },

    # Bookmarks
    { on = "m",          run = "plugin bookmarks save",       desc = "Save current position as a bookmark" },
    { on = "`",          run = "plugin bookmarks jump",       desc = "Jump to a bookmark" },
    { on = [ "u", "m" ], run = "plugin bookmarks delete",     desc = "Delete a bookmark" },
    { on = [ "u", "M" ], run = "plugin bookmarks delete_all", desc = "Delete all bookmarks" },

    ## Shell
    # Drop to shell
    { on = "S", run = """shell '"$SHELL"' --block""", desc = "Open $SHELL here" },

    # Archive compress/extract
    { on = [ "e", "x" ], run = """shell 'ya pub extract --list "$@"'""", desc = "Extract selected archive(s)" },
    { on = [ "e", "c" ], run = "plugin compress",                        desc = "Compress selected file(s)" },
    { on = [ "e", "C" ], run = "plugin compress -- --secure",            desc = "Compress selected file(s) with password" },

    # Extract view archive
    { on = [ "e", "v" ], run = """shell '~/.scripts/tuifm/extract-view.sh "$1"'""", desc = "Extract and view images inside archive" },

    # Copy image to clipboard
    { on = [ "y", "i" ], run = """shell '~/.scripts/tuifm/img-xclip.sh "$1"'""", desc = "Copy selected image to clipboard" },

    # View spectrogram with sox
    { on = [ "<C-a>", "s", "s" ], run = """shell '~/.scripts/tuifm/sox-spectrogram.sh "$1"'""",      desc = "Display spectrogram of audio file" },
    { on = [ "<C-a>", "s", "d" ], run = """shell '~/.scripts/tuifm/sox-spectrogram-diff.sh "$@"'""", desc = "Display spectrogram difference of 2 audio files" },

    # Add to playlist
    { on = [ "<C-a>", "a" ], run = """shell '~/.scripts/tuifm/add-to-playlist.sh "$@"'""", desc = "Add audio file(s) to mpd playlist" },

    # Convert audio
    { on = [ "<C-a>", "f" ],      run = """shell '~/.scripts/tuifm/convert-audio.sh "flac" "$@"'""",    desc = "Convert audio file(s) to flac" },
    { on = [ "<C-a>", "m", "1" ], run = """shell '~/.scripts/tuifm/convert-audio.sh "mp3-192" "$@"'""", desc = "Convert audio file(s) to mp3 192kbs" },
    { on = [ "<C-a>", "m", "2" ], run = """shell '~/.scripts/tuifm/convert-audio.sh "mp3-256" "$@"'""", desc = "Convert audio file(s) to mp3 256kbs" },
    { on = [ "<C-a>", "m", "3" ], run = """shell '~/.scripts/tuifm/convert-audio.sh "mp3-320" "$@"'""", desc = "Convert audio file(s) to mp3 320kbs" },
    { on = [ "<C-a>", "c" ],      run = """shell '~/.scripts/tuifm/convert-audio.sh "aac-128" "$@"'""", desc = "Convert audio file(s) to aac 128kbs" },

    # Dragon drop
    { on = [ "<C-d>", "a" ], run = """shell 'dragon-drop -a -T "$@"'""",    desc = "Drag and drop all files" },
    { on = [ "<C-d>", "s" ], run = """shell 'dragon-drop -T "$@"'""",       desc = "Drag and drop single file" },
    { on = [ "<C-d>", "z" ], run = """shell 'dragon-drop -a -x -T "$@"'""", desc = "Drag and drop all files (close)" },
    { on = [ "<C-d>", "x" ], run = """shell 'dragon-drop -x -T "$@"'""",    desc = "Drag and drop single file (close)" },

    # Upload file
    { on = [ "<C-u>", "n" ], run = """shell 'uploadfile "$1" "nullptr"'""", desc = "Upload file to 0x0.st" },
]

[tasks]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<Esc>", run = "close", desc = "Close task manager" },
    { on = "<C-[>", run = "close", desc = "Close task manager" },
    { on = "<C-c>", run = "close", desc = "Close task manager" },
    { on = "w",     run = "close", desc = "Close task manager" },
    { on = "q",     run = "close", desc = "Close task manager" },

    # Navigation
    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    { on = "K", run = "arrow -50%", desc = "Move cursor up half page" },
    { on = "J", run = "arrow +50%", desc = "Move cursor down half page" },
    { on = "k", run = "arrow -1",   desc = "Previous task" },
    { on = "j", run = "arrow 1",    desc = "Next task" },

    { on = "<Up>",   run = "arrow prev", desc = "Previous task" },
    { on = "<Down>", run = "arrow next", desc = "Next task" },

    # Action
    { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
    { on = "i",       run = "inspect", desc = "Inspect the task" },
    { on = "x",       run = "cancel",  desc = "Cancel the task" },
]

[spot]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<Esc>", run = "close", desc = "Close the spot" },
    { on = "<C-[>", run = "close", desc = "Close the spot" },
    { on = "<C-c>", run = "close", desc = "Close the spot" },
    { on = "<Tab>", run = "close", desc = "Close the spot" },
    { on = "i",     run = "close", desc = "Close the spot" },
    { on = "q",     run = "close", desc = "Close the spot" },

    # Navigation
    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    { on = "K", run = "arrow -50%", desc = "Move cursor up half page" },
    { on = "J", run = "arrow +50%", desc = "Move cursor down half page" },
    { on = "k", run = "arrow -1",   desc = "Previous line" },
    { on = "j", run = "arrow +1",   desc = "Next line" },

    { on = "h", run = "swipe -1",   desc = "Swipe to previous file" },
    { on = "l", run = "swipe +1",   desc = "Swipe to next file" },
    { on = "H", run = "swipe -50%", desc = "Swipe up half page" },
    { on = "L", run = "swipe +50%", desc = "Swipe down half page" },

    { on = "<Up>",    run = "arrow -1", desc = "Previous line" },
    { on = "<Down>",  run = "arrow +1", desc = "Next line" },
    { on = "<Left>",  run = "swipe -1", desc = "Swipe to previous file" },
    { on = "<Right>", run = "swipe +1", desc = "Swipe to next file" },

    # Copy
    { on = [ "y", "c" ], run = "copy cell", desc = "Copy selected cell" },
]

[pick]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<Esc>", run = "close", desc = "Cancel pick" },
    { on = "<C-[>", run = "close", desc = "Cancel pick" },
    { on = "<C-c>", run = "close", desc = "Cancel pick" },
    { on = "q",     run = "close", desc = "Cancel pick" },

    # Pick
    { on = "<Enter>", run = "close --submit", desc = "Submit the pick" },
    { on = "o",       run = "close --submit", desc = "Submit the pick" },

    # Navigation
    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    { on = "k", run = "arrow -1", desc = "Previous option" },
    { on = "j", run = "arrow +1", desc = "Next option" },

    { on = "<Up>",   run = "arrow -1", desc = "Previous option" },
    { on = "<Down>", run = "arrow +1", desc = "Next option" },
]

[input]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<C-c>", run = "escape", desc = "Back to normal mode, or cancel input" },
    { on = "<C-[>", run = "escape", desc = "Back to normal mode, or cancel input" },
    { on = "<Esc>", run = "close",  desc = "Cancel input" },

    # Submit
    { on = "<Enter>", run = "close --submit", desc = "Submit input" },

    # Mode
    { on = "i", run = "insert",                          desc = "Enter insert mode" },
    { on = "I", run = [ "move first-char", "insert" ],   desc = "Move to the BOL, and enter insert mode" },
    { on = "a", run = "insert --append",                 desc = "Enter append mode" },
    { on = "A", run = [ "move eol", "insert --append" ], desc = "Move to the EOL, and enter append mode" },
    { on = "v", run = "visual",                          desc = "Enter visual mode" },
    { on = "r", run = "replace",                         desc = "Replace a single character" },

    # Selection
    { on = "V",     run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },
    { on = "<C-A>", run = [ "move eol", "visual", "move bol" ], desc = "Select from EOL to BOL" },
    { on = "<C-E>", run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },

    # Character-wise movement
    { on = "h",       run = "move -1", desc = "Move back a character" },
    { on = "l",       run = "move 1",  desc = "Move forward a character" },
    { on = "<A-h>",   run = "move -1", desc = "Move back a character" },
    { on = "<A-l>",   run = "move 1",  desc = "Move forward a character" },
    { on = "<Left>",  run = "move -1", desc = "Move back a character" },
    { on = "<Right>", run = "move 1",  desc = "Move forward a character" },
    { on = "<C-b>",   run = "move -1", desc = "Move back a character" },
    { on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

    # Word-wise movement
    { on = "b",     run = "backward",                    desc = "Move back to the start of the current or previous word" },
    { on = "B",     run = "backward --far",              desc = "Move back to the start of the current or previous WORD" },
    { on = "w",     run = "forward",                     desc = "Move forward to the start of the next word" },
    { on = "W",     run = "forward --far",               desc = "Move forward to the start of the next WORD" },
    { on = "e",     run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },
    { on = "E",     run = "forward --far --end-of-word", desc = "Move forward to the end of the current or next WORD" },
    { on = "<A-b>", run = "backward",                    desc = "Move back to the start of the current or previous word" },
    { on = "<A-f>", run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },

    # Line-wise movement
    { on = "0",      run = "move bol",        desc = "Move to the BOL" },
    { on = "$",      run = "move eol",        desc = "Move to the EOL" },
    { on = "_",      run = "move first-char", desc = "Move to the first non-whitespace character" },
    { on = "^",      run = "move first-char", desc = "Move to the first non-whitespace character" },
    { on = "<C-a>",  run = "move bol",        desc = "Move to the BOL" },
    { on = "<C-e>",  run = "move eol",        desc = "Move to the EOL" },
    { on = "<Home>", run = "move bol",        desc = "Move to the BOL" },
    { on = "<End>",  run = "move eol",        desc = "Move to the EOL" },

    # Delete
    { on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
    { on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
    { on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
    { on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

    # Kill
    { on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
    { on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
    { on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
    { on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

    # Cut/Yank/Paste
    { on = "d", run = "delete --cut",                              desc = "Cut selected characters" },
    { on = "D", run = [ "delete --cut", "move eol" ],              desc = "Cut until EOL" },
    { on = "c", run = "delete --cut --insert",                     desc = "Cut selected characters, and enter insert mode" },
    { on = "C", run = [ "delete --cut --insert", "move eol" ],     desc = "Cut until EOL, and enter insert mode" },
    { on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut current character" },
    { on = "y", run = "yank",                                      desc = "Copy selected characters" },
    { on = "p", run = "paste",                                     desc = "Paste copied characters after the cursor" },
    { on = "P", run = "paste --before",                            desc = "Paste copied characters before the cursor" },

    # Undo/Redo
    { on = "u",     run = "undo", desc = "Undo the last operation" },
    { on = "<C-r>", run = "redo", desc = "Redo the last operation" },
]

[confirm]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<Esc>", run = "close", desc = "Cancel the confirm" },
    { on = "<C-[>", run = "close", desc = "Cancel the confirm" },
    { on = "<C-c>", run = "close", desc = "Cancel the confirm" },
    { on = "q",     run = "close", desc = "Cancel the confirm" },

    # Submit
    { on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

    # Confirm/Deny
    { on = "n", run = "close",          desc = "Cancel the confirm" },
    { on = "y", run = "close --submit", desc = "Submit the confirm" },

    # Navigation
    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    { on = "K", run = "arrow -50%", desc = "Move cursor up half page" },
    { on = "J", run = "arrow +50%", desc = "Move cursor down half page" },
    { on = "k", run = "arrow -1",   desc = "Previous line" },
    { on = "j", run = "arrow +1",   desc = "Next line" },

    { on = "<Up>",   run = "arrow -1", desc = "Previous line" },
    { on = "<Down>", run = "arrow +1", desc = "Next line" },
]

[cmp]
keymap = [
    # Help
    { on = "<F1>", run = "help", desc = "Open help" },

    # Exit
    { on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },

    # Submit completion
    { on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },

    # Submit
    { on = "<Enter>", run = [ "close --submit", "input:close --submit" ], desc = "Complete and submit the input" },

    # Navigation
    { on = "<A-k>", run = "arrow prev", desc = "Previous item" },
    { on = "<A-j>", run = "arrow next", desc = "Next item" },

    { on = "<Up>",   run = "arrow prev", desc = "Previous item" },
    { on = "<Down>", run = "arrow next", desc = "Next item" },

    { on = "<C-p>", run = "arrow prev", desc = "Previous item" },
    { on = "<C-n>", run = "arrow next", desc = "Next item" },
]

[help]
keymap = [
    # Exit
    { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
    { on = "q",     run = "escape", desc = "Clear the filter, or hide the help" },
    { on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
    { on = "<C-c>", run = "close",  desc = "Hide the help" },

    # Navigation
    { on = [ "g", "g" ], run = "arrow top", desc = "Go to top" },
    { on = "G",          run = "arrow bot", desc = "Go to bottom" },

    { on = "K", run = "arrow -50%", desc = "Move cursor up half page" },
    { on = "J", run = "arrow +50%", desc = "Move cursor down half page" },
    { on = "k", run = "arrow -1",   desc = "Previous line" },
    { on = "j", run = "arrow +1",   desc = "Next line" },

    { on = "<Up>",   run = "arrow -1", desc = "Previous line" },
    { on = "<Down>", run = "arrow +1", desc = "Next line" },

    # Filtering
    { on = "f", run = "filter", desc = "Filter help items" },
    { on = "/", run = "filter", desc = "Filter help items" },
    { on = "?", run = "filter", desc = "Filter help items" },
]
